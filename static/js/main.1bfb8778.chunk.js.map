{"version":3,"sources":["Msg.js","TabWeights.js","TabTag.js","TabGroup.js","TabDead.js","Prefs.js","TabContainer.js","TabSelector.js","WeightDateBar.js","WeightsPane.js","Keypad.js","Colorbar.js","TagBar.js","TagInput.js","WeightInput.js","App.js","module/sequences.js","module/index.js","index.js"],"names":["connect","msg","state","_templateObject","props","react_default","a","createElement","className","type","text","truncateColor","str","length","slice","records","TabWeights_templateObject","colors","_templateObject2","tagInput","_templateObject3","weightInput","_templateObject4","moveInput","sequences","_templateObject5","changeSort","_templateObject6","_React$Component","TabWeights","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","extrarowtagactive","row","extrarowweightactive","extrarowcolor","tag","color","refTagActiveElement","scrollIntoView","width","_","map","r","i","tagactive","weightactive","align","onClick","whichInput","id","style","borderColor","number","weight","group","parts","split","substr","join","truncateGroupName","days","rog","numeral","format","onChange","evt","target","sort","React","Component","groups","TabGroup_templateObject","treatments","TabGroup_templateObject2","sortBy","TabGroup_templateObject3","sortBySignal","TabGroup_templateObject4","all_groups","g","day","groupname","dead","head","reverse","perc","name","moment","date","extendMoment","Moment","deadRecords","TabDead_templateObject","today","lastmonth","range","clone","subtract","lastthreemonths","lastyear","deadlastmonth","filter","within","deadlastthreemonths","deadlastyear","totallastmonth","reduce","sum","tags","totallastthreemonths","totallastyear","diff","logout","Prefs_templateObject","href","preventDefault","tabSelector","TabContainer_templateObject","ret","active","src_TabWeights_0","src_TabTag","src_TabGroup_0","src_TabDead","src_Prefs_0","TabSelector_templateObject","changeTab","TabSelector_templateObject2","lib_default","WeightDateBar_templateObject","stats","WeightDateBar_templateObject2","filters","WeightDateBar_templateObject3","changeDate","WeightDateBar_templateObject4","loadWeightsForDate","WeightDateBar_templateObject5","changeHeavyLimit","WeightDateBar_templateObject6","heavyFilter","heavy","limit","count","renderStatsObj","obj","Card_default","lbsGain","adjWeight","renderStats","which","onBlur","label","size","displayName","arr","cloneDeep","each","s","renderCombinedStats","windowSize","WeightsPane_templateObject","height","orientation","src_Msg_0","src_TabSelector_0","src_WeightDateBar_0","src_TabContainer","Keypad","disableKeypress","keyCode","onBackspace","onNumber","document","addEventListener","keypressed","bind","removeEventListener","n","_this","onClear","_this2","info","isObject","val","clicked","numberClicked","renderCalcRow","clearClicked","backspaceClicked","Colorbar_templateObject","Colorbar_templateObject2","changeTag","Colorbar_templateObject3","Colorbar","keys","c","k","colorButtonClicked","backgroundColor","TagBar_templateObject","TagBar_templateObject2","TagBar_templateObject3","recordsValid","TagInput_templateObject","TagInput_templateObject2","TagInput_templateObject3","saveTag","TagInput_templateObject4","moveUp","TagInput_templateObject5","moveDown","TagInput_templateObject6","canSave","src_TagBar_0","src_Colorbar_0","src_Keypad_0","num","prefix","WeightInput_templateObject","WeightInput_templateObject2","changeWeight","WeightInput_templateObject3","saveWeight","WeightInput_templateObject4","WeightInput_templateObject5","WeightInput_templateObject6","disabled","App_templateObject","init","App_templateObject2","App","dir","inputdir","maxinputwidth","flexDirection","src_WeightsPane_0","maxWidth","src_TagInput_0","src_WeightInput_0","scrollToTag","el","getElementById","scrollToWeight","set","sequences_templateObject","sequences_templateObject2","tabGroupSortClicked","sequences_templateObject3","sequences_templateObject4","trello","sequence","sequences_templateObject5","sequences_templateObject6","_templateObject7","_templateObject8","weights","_templateObject9","_templateObject10","_ref","store","_templateObject11","_templateObject12","_templateObject13","_ref2","_templateObject14","_templateObject15","_ref4","get","numrecords","_templateObject24","_templateObject25","_ref3","_templateObject16","numrows","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_ref5","moveInputUp","_ref6","_templateObject26","moveInputDown","_ref7","_templateObject27","loadGroupDays","_ref10","groupForTag","_templateObject30","_templateObject31","inDate","computeRoG","_ref11","find","_templateObject32","saveRecord","_ref12","_templateObject33","_templateObject34","_templateObject35","toMerge","merge","_templateObject36","record","_templateObject37","_templateObject38","_ref13","_templateObject39","_ref8","_templateObject28","_templateObject40","_templateObject41","_ref14","_templateObject42","_ref15","_ref9","_templateObject29","_templateObject43","_templateObject44","_templateObject45","google","_templateObject46","parallel","incoming","_templateObject47","_ref16","lastrow","_templateObject48","_templateObject49","_templateObject50","_templateObject51","_templateObject52","src_module","limits","light","modules","treatmentsModule","incomingModule","deadModule","weightsModule","trelloModule","googleModule","windowSizeModule","providers","trelloProvider","googleProvider","windowSizeProvider","catch","trelloErrors","module_templateObject","module_templateObject2","module_templateObject3","controller","CerebralApp","AppModule","devtools","ReactDOM","render","_cerebral_react","app","src_App_0"],"mappings":"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","file":"static/js/main.1bfb8778.chunk.js","sourcesContent":["import React from  'react';\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral';\n\nimport './Msg.css';\n\nexport default connect({\n  msg: state`msg`,\n}, function Msg(props) {\n  return (\n    <div className={'msg msg' + props.msg.type}>\n      {props.msg.text}\n    </div>\n   );\n});\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport './TabWeights.css';\n\nfunction truncateGroupName(str) {\n  const parts = _.split(str, ':');\n  if (parts[0].length > 6) {\n    parts[0] = parts[0].substr(0,3)+'...'+parts[0].substr(-3);\n  }\n  return _.join(parts, ':');\n}\n\nfunction truncateColor(str) {\n  if (str.length < 8) return str;\n  return str.slice(0,3)+'..'+str.slice(-3);\n}\n\nexport default connect({\n      records: state`weights.records`,\n       colors: state`treatments.colors`,\n     tagInput: state`tagInput`,\n  weightInput: state`weightInput`,\n    moveInput: sequences`moveInput`,\n   changeSort: sequences`changeSort`,\n}, class TabWeights extends React.Component {\n\n  render() {\n    const props = this.props;\n    const extrarowtagactive = props.tagInput.row === props.records.length;\n    const extrarowweightactive = props.weightInput.row === props.records.length;\n    const extrarowcolor = (props.tagInput.tag && props.tagInput.tag.color) ? props.colors[props.tagInput.tag.color] : 'black';\n    if (this.refTagActiveElement) this.refTagActiveElement.scrollIntoView();\n    return (\n      <div className=\"tabweights\">\n        <table className=\"tabweightstable\">\n          <thead>\n            <tr>\n              <th width=\"5%\">#</th>\n              <th width=\"25%\">Tag</th>\n              <th width=\"8%\">Weight</th>\n              <th width=\"22%\">Group</th>\n              <th width=\"8%\">Days</th>\n              <th width=\"8%\">RoG</th>\n              <th width=\"24%\">Sort</th>\n            </tr>\n          </thead>\n          <tbody>\n        { _.map(props.records, (r,i) => {\n          const color = (r.tag && r.tag.color) ? props.colors[r.tag.color] : 'black';\n          const tagactive = props.tagInput.row === i;\n          const weightactive = props.weightInput.row === i;\n          const tag = tagactive ? props.tagInput.tag : r.tag;\n          return <tr key={'tabweightstablerow'+i} className='tabweightstablerow'>\n            <td className='tabweightstablecol' align=\"center\">\n              { (i+1) }\n            </td>\n            <td className={'tabweightstablecol ' + (tagactive ? 'tagactive ' : '')} \n                onClick={() => props.moveInput({ whichInput: 'tagInput', row: i })}\n                id={tagactive ? 'tagScrollToMe' : 'tagDoNotScrollToMe' }>\n              <div className=\"tabweightstagtext\" style={{ color, borderColor: color }}>\n                {(tag && tag.color) ? truncateColor(tag.color) : '' } {(tag && tag.number) ? tag.number : ''}\n              </div>\n            </td>\n            <td className={'tabweightstablecol ' + (weightactive ? 'weightactive' : '') }\n                onClick={() => props.moveInput({ whichInput: 'weightInput', row: i })}\n                id={weightactive ? 'weightScrollToMe' : 'weightDoNotScrollToMe' }\n                align=\"center\">\n              { weightactive ? props.weightInput.weight * 10 : r.weight }\n            </td>\n            <td className='tabweightstablecol' align=\"center\">\n              { r.group ? truncateGroupName(r.group) : 'none' }\n            </td>\n            <td className='tabweightstablecol' align=\"center\">\n              {r.days ? r.days : '' }\n            </td>\n            <td className='tabweightstablecol' align=\"center\">\n              {r.rog ? numeral(r.rog).format('0.00') : '' }\n            </td>\n            <td className='tabweightstablecol' align=\"center\">\n              <select \n                onChange={(evt) => props.changeSort({ row: i, value: evt.target.value })}\n                value={ r.sort || 'SELL' }\n              >\n                <option value='SELL'>SELL</option>\n                <option value='HEAVY'>HEAVY</option>\n                <option value='KEEP'>KEEP</option>\n                <option value='JUNK'>JUNK</option>\n                <option value='SPECIAL1'>SPECIAL1</option>\n              </select>\n            </td>\n  \n          </tr>})\n        }\n        {\n          <tr key=\"extrarow\" className='tabweightstablerow'>\n            <td className='tabweightstablecol' align=\"center\">\n              { (props.records.length+1) }\n            </td>\n            <td className={'tabweightstablecol ' + (extrarowtagactive ? 'tagactive' : '') }\n              onClick={() => props.moveInput({ whichInput: 'tagInput', row: props.records.length })}\n              id={extrarowtagactive ? 'tagScrollToMe' : 'tagDoNotScrollToMe' }>\n              { extrarowtagactive ? \n                  <div className=\"tabweightstagtext\" style={{ color: extrarowcolor, borderColor: extrarowcolor }}>\n                    {(props.tagInput.tag && props.tagInput.tag.color) ? truncateColor(props.tagInput.tag.color) : '' } {(props.tagInput.tag && props.tagInput.tag.number) ? props.tagInput.tag.number : ''}\n                  </div>\n                : ' '\n              }\n            </td>\n            <td className={'tabweightstablecol ' + (extrarowweightactive ? 'weightactive' : '') }\n              onClick={() => props.moveInput({ whichInput: 'weightInput', row: props.records.length })}\n              id={extrarowweightactive ? 'weightScrollToMe' : 'weightDoNotScrollToMe' }>\n              { extrarowweightactive ? props.weightInput.weight * 10 : '' }\n            </td>\n            <td className={'tabweightstablecol'}>\n            </td>\n            <td className={'tabweightstablecol'}>\n            </td>\n            <td className={'tabweightstablecol'}>\n            </td>\n            <td className={'tabweightstablecol'}>\n            </td>\n\n          </tr>\n        }\n        </tbody>\n        </table>\n      </div>\n    );\n  }\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\n\nexport default connect({\n}, function TabTag(props) {\n  return (\n    <div className=\"tabtag\">\n      This is the tag tab\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport './TabGroup.css';\n\nexport default connect({\n     groups: state`incoming.records`,\n treatments: state`treatments.records`,\n     sortBy: state`historyGroup.sort`,\n sortBySignal: sequences`tabGroupSortClicked`,\n}, function TabGroup(props) {\n  let all_groups = props.groups;\n  all_groups = _.sortBy(all_groups, g => {\n    if (props.sortBy === 'date') return g.day; // day string is lexicographic for sorting\n    if (props.sortBy === 'name') return g.groupname;\n    if (props.sortBy === 'dead') return g.dead;\n    if (props.sortBy === 'perc') return (g.dead ? g.dead.length : 0) / (g.head ? g.head : 1);\n    return g.day; // default\n  });\n  all_groups = _.reverse(all_groups); // other way seems better\n  return (\n    <div className=\"tabgroup\">\n      <table width=\"100%\">\n      <tbody>\n        <tr>\n          <th onClick={() => props.sortBySignal({ sort: 'name'})}>Name</th>\n          <th onClick={() => props.sortBySignal({ sort: 'date'})}>Date</th>\n          <th onClick={() => props.sortBySignal({ sort: 'dead'})}>Dead</th>\n          <th onClick={() => props.sortBySignal({ sort: 'perc'})}>%</th>\n        </tr>\n      { \n        _.map(all_groups, (g,i) => {\n          let perc = 0;\n          if (g.dead && g.head) perc = g.dead.length / g.head;\n          let name = g.groupname;\n          if (name.length > 15) name = name.slice(0,6)+'...'+name.slice(-6);\n          return (\n            <tr className={ perc < .05 ? 'tabgroupgood' : perc < 0.1 ? 'tabgroupmeh' : 'tabgroupbad' } key={'tabgrouprow'+i}>\n              <td className=\"tabgroupname\"><span name=\"tabgroupnamepill\">{ name }</span></td>\n              <td className=\"tabgroupdate\"> { moment(g.date,'YYYY-MM-DD').format('M/DD/YY') }</td>\n              <td className=\"tabgroupdead\">{ g.dead ? g.dead.length : 0 }</td>\n              <td className=\"tabgroupperc\">{ perc > 0 ? '('+numeral(perc).format('0.00%')+')' : '' }</td>\n            </tr>\n          );\n        })\n      }\n      </tbody>\n      </table>\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport { extendMoment } from 'moment-range';\nimport Moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nconst moment = extendMoment(Moment);\n\nexport default connect({\n      deadRecords: state`dead.records`,\n}, function TabDead(props) {\n\n  const today = moment();\n  const lastmonth = moment.range(today.clone().subtract(1,'months'),today);\n  const lastthreemonths = moment.range(today.clone().subtract(3,'months'),today);\n  const lastyear = moment.range(today.clone().subtract(1,'years'),today);\n\n  const deadlastmonth       = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastmonth));\n  const deadlastthreemonths = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastthreemonths));\n  const deadlastyear        = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastyear));\n\n  const totallastmonth       = _.reduce(deadlastmonth,       (sum,r) => sum+r.tags.length, 0);\n  const totallastthreemonths = _.reduce(deadlastthreemonths, (sum,r) => sum+r.tags.length, 0);\n  const totallastyear        = _.reduce(deadlastyear,        (sum,r) => sum+r.tags.length, 0);\n  return (\n    <div className=\"tabdead\">\n      <div className=\"tabdeadentry\">\n        Past month: {totallastmonth} dead ({numeral(totallastmonth/lastmonth.diff('days')).format('0.00')}/day)\n      </div>\n      <div className=\"tabdeadentry\">\n        Past 3 months: {totallastthreemonths} dead ({numeral(totallastthreemonths/lastthreemonths.diff('days')).format('0.00')}/day)\n      </div>\n      <div className=\"tabdeadentry\">\n        Past year: {totallastyear} dead ({numeral(totallastyear/lastyear.diff('days')).format('0.00')}/day)\n      </div>\n    </div>\n  );\n});\n\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { sequences } from 'cerebral';\n\nimport './Prefs.css';\n\nexport default connect({\n  logout: sequences`logout`,\n}, function Prefs(props) {\n\n  const logoutClicked = evt => {\n    props.logout();\n    evt.preventDefault();\n  }\n\n  return (\n    <div className=\"prefs\">\n      <a href=\"#top\" className=\"prefslink\" onClick={logoutClicked}>Change Trello Account</a>\n    </div>\n  );\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral';\n\nimport  TabWeights from './TabWeights';\nimport      TabTag from './TabTag';\nimport    TabGroup from './TabGroup';\nimport     TabDead from './TabDead';\nimport       Prefs from './Prefs';\n\nimport './TabContainer.css';\n\nexport default connect({\n   tabSelector: state`tabSelector`,\n}, function TabsContainer(props) {\n  let ret = (<div className='tabscontainer'>Unknown Tab Type</div>);\n  switch(props.tabSelector.active) {\n    case 'weights': ret = <TabWeights />;  break;\n    case     'tag': ret = <TabTag     />;   break;\n    case   'group': ret = <TabGroup   />; break;\n    case    'dead': ret = <TabDead    />;  break;\n    case   'prefs': ret = <Prefs      />;  break;\n    default:\n  }\n  return ret;\n});\n\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport './TabSelector.css';\n\nexport default connect({\n  tabSelector: state`tabSelector`,\n  changeTab: sequences`changeTab`,\n}, function TabSelector(props) {\n  const   prefsClicked = evt => props.changeTab({ active: 'prefs' });\n  const weightsClicked = evt => props.changeTab({ active: 'weights' });\n  const     tagClicked = evt => props.changeTab({ active: 'tag' });\n  const   groupClicked = evt => props.changeTab({ active: 'group' });\n  const    deadClicked = evt => props.changeTab({ active: 'dead' });\n\n  return (\n    <div className=\"tabselector\">\n      <div className={'tabselectorbutton ' + (props.tabSelector.active === 'prefs' ? 'tabselectorbuttonactive' : '')}\n           onClick={prefsClicked}>\n        <FontAwesome name='bars' />\n      </div>\n      <div className={'tabselectorbutton ' + (props.tabSelector.active === 'weights' ? 'tabselectorbuttonactive' : '')}\n           onClick={weightsClicked}>\n        Weights\n      </div>\n      <div className={'tabselectorbutton ' + (props.tabSelector.active === 'tag' ? 'tabselectorbuttonactive' : '')}\n           onClick={tagClicked}>\n        Tag\n      </div>\n      <div className={'tabselectorbutton ' + (props.tabSelector.active === 'group' ? 'tabselectorbuttonactive' : '')}\n           onClick={groupClicked}>\n        Group\n      </div>\n      <div className={'tabselectorbutton ' + (props.tabSelector.active === 'dead' ? 'tabselectorbuttonactive' : '')}\n           onClick={deadClicked}>\n        Dead\n      </div>\n\n    </div>\n  );\n\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport Card from '@material-ui/core/Card';\n\nimport './WeightDateBar.css';\n\nexport default connect({\n          date: state`date`,\n         stats: state`weights.stats`,\n       filters: state`weights.filters`,\n          changeDate: sequences`changeDate`,\n  loadWeightsForDate: sequences`loadWeightsForDate`,\n    changeHeavyLimit: sequences`weights.changeHeavyLimit`,\n}, function WeightDateBar(props) {\n\n  const heavyFilter = props.filters && props.filters.heavy ? props.filters.heavy : { limit: 1500, count: 0 };\n\n  const dateChanged = evt => {\n    evt.preventDefault();\n    props.changeDate({date: evt.target.value});\n  };\n\n  function renderStatsObj(name, obj) {\n    return <Card key={'weightdatebarstats'+name} className=\"weightdatebarcard\">\n      <div className=\"weightdatebarcardtitle\">\n        { name }\n      </div>\n      <div className='weightdatebarfilter'>\n        { obj.count + ' head' }\n      </div>\n      <div className='weightdatebarfilter'>\n        { obj.days ? numeral(obj.lbsGain / obj.days).format('0.00') : 0 } RoG\n      </div>\n      <div className='weightdatebarfilter'>\n        { obj.count ? numeral(obj.adjWeight / obj.count).format('0') : 0 } lbs\n      </div>\n    </Card>\n  }\n\n  function renderStats(which) {\n    if (!props.stats || !props.stats[which]) return '';\n    return renderStatsObj(which, props.stats[which]);\n  }\n\n  function renderCombinedStats(displayName, arr) {\n    if (!props.stats || !props.stats[arr[0]]) return;\n    const obj = _.cloneDeep(props.stats[arr[0]]);\n    _.each(arr.slice(1), which => {\n      const s = props.stats[which];\n      if (!s) return;\n      obj.count += s.count;\n      obj.lbsGain += s.lbsGain;\n      obj.adjWeight += s.adjWeight;\n    });\n    return renderStatsObj(displayName, obj);\n  }\n  \n  return (\n    <div className=\"weightdatebar\">\n    \n      <div className=\"weightdatebarleft\">\n        <Card className=\"weightdatebarinputcard\">\n          <input className='weightdatebarinput'\n                   value={props.date}\n                   type=\"date\"\n                   onChange={dateChanged}\n                   onBlur={() => props.loadWeightsForDate()}\n          />\n          <div className='weightdatebarfilter'>\n            { heavyFilter.count } &gt;\n            <input className='weightdatebarinput' \n               label='Heavy' \n               size='5'\n               value={heavyFilter.limit} \n               onChange={evt => { props.changeHeavyLimit({ limit: evt.target.value}) } } \n            />\n            lbs\n          </div>\n        </Card>\n      </div>\n      <div className=\"weightdatebarright\">\n        { _.map(['ALL', 'SELL', 'HEAVY' ], renderStats) }\n      </div>\n      <div className=\"weightdatebarright\">\n        { _.map(['KEEP', 'JUNK' ], renderStats) }\n        { renderCombinedStats('S+H', ['SELL', 'HEAVY']) }\n      </div>\n\n    </div>\n  );\n});\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral';\n\nimport Msg from './Msg';\nimport TabContainer from './TabContainer';\nimport TabSelector from './TabSelector';\nimport WeightDateBar from './WeightDateBar';\n\nimport './WeightsPane.css';\n\nexport default connect({\n  windowSize: state`windowSize`,\n}, function WeightsPane(props) {\n  return (\n    <div className='weightspane' style={{ height: props.windowSize.orientation === 'landscape' ? '100vh' : '100vw' }}>\n      <Msg />\n      <TabSelector />\n      <WeightDateBar />\n      <TabContainer />\n    </div>\n   );\n});\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\n\nimport './Keypad.css';\n\nexport default connect({\n}, class Keypad extends React.Component {\n\n  keypressed(evt) {\n    if (this.props.disableKeypress) return; \n    if (evt.keyCode === 8) {\n      this.props.onBackspace(); // backspace\n      evt.preventDefault();\n    }\n    const number = evt.keyCode - 48; // 0 is key 48\n    if (number >= 0 && number <=9) {\n      this.props.onNumber(number);\n      evt.preventDefault();\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressed.bind(this));\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressed.bind(this));\n  }\n\n  numberClicked(n) {\n    return (evt) => {\n      evt.preventDefault();\n      this.props.onNumber(n);\n    }\n  }\n\n  clearClicked(evt) {\n    evt.preventDefault();\n    this.props.onClear();\n  }\n\n  backspaceClicked(evt) {\n    evt.preventDefault();\n    this.props.onBackspace();\n  }\n\n  renderCalcRow(arr) {\n    return (\n      <div className=\"keypadrow\"> \n        {\n          arr.map(info => \n              <div className=\"keypadbutton\"\n                   key={'calcwrap'+(_.isObject(info) ? info.val : info)}\n                   onClick={_.isObject(info) ? info.clicked : this.numberClicked(info).bind(this) }>\n                {_.isObject(info) ? info.val : info}\n              </div>\n          )\n        }\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"keypad\">\n        {this.renderCalcRow([1,2,3])}\n        {this.renderCalcRow([4,5,6])}\n        {this.renderCalcRow([7,8,9])}\n        { \n          this.renderCalcRow([\n            { val: 'C', clicked: this.clearClicked.bind(this) },\n            0,\n            { val: '<--', clicked: this.backspaceClicked.bind(this) },\n          ])\n        }\n      </div>\n    );\n  }\n});\n\n\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport './Colorbar.css';\n\nexport default connect({\n     tag: state`tagInput.tag`,\n  colors: state`treatments.colors`,\n  changeTag: sequences`changeTag`,\n}, class Colorbar extends React.Component {\n\n  keypressed(evt) {\n    let color = '';\n    switch(evt.key) {\n      case 'y': color = 'YELLOW'; break;\n      case 'g': color = 'GREEN'; break;\n      case 'b': color = 'BLUE'; break;\n      case 'r': color = 'RED'; break;\n      case 'p': color = 'PURPLE'; break;\n      case 'w': color = 'WHITE'; break;\n      case 'n': color = 'NOTAG'; break;\n      default: return;\n    }\n    evt.preventDefault();\n    this.props.changeTag({tag: { color: color } });\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressed.bind(this));\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressed.bind(this));\n  }\n\n  colorButtonClicked(color) { \n    const props = this.props;\n    return evt => {\n      evt.preventDefault();\n      props.changeTag({tag: { color } });\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"colorbar\">\n        {_.keys(this.props.colors).map((c,k) => \n            <div key={'color'+c} \n                 className=\"colorbutton\"\n                 onClick={this.colorButtonClicked(c)} \n                 style={{backgroundColor: this.props.colors[c] }}>\n            </div>\n         )}\n         <div key={'colorNOTAG'}\n              className=\"colorbutton\"\n              onClick={this.colorButtonClicked('NOTAG')}\n              style={{backgroundColor: '#CCCCCC'}}>\n        </div>\n      </div>\n    );\n  }\n\n});\n\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport './TagBar.css';\n\nexport default connect({\n     tag: state`tagInput.tag`,\n  colors: state`treatments.colors`,\n  changeTag: sequences`changeTag`,\n}, function TagBar(props) {\n  const colorTextChanged = evt => {\n    evt.preventDefault();\n    props.changeTag({tag: { color: evt.target.value} });\n  };\n\n  const tagNumberTextChanged = evt => {\n    evt.preventDefault();\n    props.changeTag({tag: { number: +(evt.target.value)} });\n  };\n\n  const color = props.colors[props.tag.color];\n  return (\n    <div className=\"tagbar\">\n      <input className=\"colortext\"\n             style={{ color: color, borderColor: color }}\n             value={props.tag.color}\n             type=\"text\"\n             onChange={colorTextChanged} />\n      <input className=\"numbertext\"\n             value={props.tag.number || ''} \n             type=\"text\" \n             onChange={tagNumberTextChanged} />\n    </div>\n  );\n\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport Keypad from './Keypad.js';\nimport Colorbar from './Colorbar.js';\nimport TagBar from './TagBar.js';\n\nimport './TagInput.css';\n\nexport default connect({\n  recordsValid: state`recordsValid`,\n      tagInput: state`tagInput`,\n     changeTag: sequences`changeTag`,\n       saveTag: sequences`saveTag`,\n        moveUp: sequences`moveInputUp`,\n      moveDown: sequences`moveInputDown`,\n}, function TagInput(props) {\n\n  const numberClicked = num => {\n    const prefix = '' + (props.tagInput.tag.number || ''); // convert to string\n    props.changeTag({tag: { number: prefix+num} });\n  };\n\n  const clearClicked = () => {\n    props.changeTag({ tag: { number: '', color: '' } });\n  };\n\n  const backspaceClicked = () => {\n    let str = ''+props.tagInput.tag.number;\n    if (str.length > 0) str = str.slice(0,-1);\n    props.changeTag({ tag: { number: +(str) } });\n  };\n\n  const canSave = props.recordsValid && props.tagInput.tag && props.tagInput.tag.number && props.tagInput.tag.color.length > 0;\n\n  const tagSaveClicked = evt => {\n    if (canSave) {\n      evt.preventDefault();\n      props.saveTag();\n    }\n  };\n\n  return (\n    <div className=\"taginput\">\n\n      <TagBar />\n\n      <Colorbar />\n\n      <Keypad onNumber={numberClicked}\n              onClear={clearClicked}\n              onBackspace={backspaceClicked}\n              disableKeypress={true}/>\n\n      <div className='taginputbuttonscontainer'>\n        <div className='taginputrowbutton taginputrowbuttonleft'\n             onClick={() => props.moveUp({ whichInput: 'tagInput' })}>\n          ^\n        </div>\n        <div className={'savebutton ' + (canSave ? 'savebuttonenabled':'savebuttondisabled')}\n           onClick={tagSaveClicked}>\n          SAVE TAG\n        </div>\n        <div className='taginputrowbutton taginputrowbuttonright'\n             onClick={() => props.moveDown({ whichInput: 'tagInput' })}>\n          v\n        </div>\n      </div>\n\n    </div>\n  );\n});\n","import React from 'react';\nimport numeral from 'numeral';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport Keypad from './Keypad.js';\n\nimport './WeightInput.css';\n\nexport default connect({\n  recordsValid: state`recordsValid`,\n   weightInput: state`weightInput`,\n  changeWeight: sequences`changeWeight`,\n    saveWeight: sequences`saveWeight`,\n        moveUp: sequences`moveInputUp`,\n      moveDown: sequences`moveInputDown`,\n}, function WeightInput(props) {\n\n  const numberClicked = num => {\n    const prefix = '' + (props.weightInput.weight || ''); // convert to string\n    props.changeWeight({weight: prefix+num});\n  };\n\n  const clearClicked = () => {\n    props.changeWeight({ weight: '' });\n  };\n\n  const backspaceClicked = () => {\n    let str = ''+props.weightInput.weight;\n    if (str.length > 0) str = str.slice(0,-1);\n    props.changeWeight({ weight: +(str) });\n  };\n\n  const canSave = props.recordsValid && props.weightInput.weight > 0;\n\n  const weightSaveClicked = evt => {\n    if (canSave) {\n      evt.preventDefault();\n      props.saveWeight();\n    }\n  };\n\n\n  return (\n    <div className=\"weightinput\">\n      <div className=\"weightinputdisplay\">\n        <input className=\"weightinputdisplayinput\"\n          size=\"8\"\n          disabled='disabled'\n          value={numeral(props.weightInput.weight*10).format(0,0) } />\n        lbs \n      </div>\n\n      <Keypad onNumber={numberClicked}\n              onClear={clearClicked}\n              onBackspace={backspaceClicked}\n              disableKeypress={true}/>\n\n      <div className='weightinputbuttonscontainer'>\n        <div className='weightinputrowbutton weightinputrowbuttonleft'\n             onClick={() => props.moveUp({ whichInput: 'weightInput' })}>\n          ^\n        </div>\n        <div className={'weightsavebutton ' + (canSave ? 'weightsavebuttonenabled':'weightsavebuttondisabled')}\n             onClick={weightSaveClicked}>\n          SAVE LBS\n        </div>\n        <div className='weightinputrowbutton weightinputrowbuttonright'\n             onClick={() => props.moveDown({ whichInput: 'weightInput' })}>\n          v\n        </div>\n      </div>\n\n    </div>\n  );\n});\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport WeightsPane from './WeightsPane';\nimport TagInput from './TagInput';\nimport WeightInput from './WeightInput';\n\nimport './App.css';\n\nexport default connect({\n  windowSize: state`windowSize`,\n  init: sequences`init`,\n}, class App extends React.Component {\n\n  componentWillMount() {\n    this.props.init();\n  }\n\n  render() {\n    const dir = this.props.windowSize.orientation === 'landscape' ? 'row' : 'column';\n    const inputdir = dir === 'row' ? 'column' : 'row'; // arrange input opposite main layout\n    const maxinputwidth = inputdir === 'row' ? '100%' : '25%';\n\n    return (\n      <div className=\"App\" style={{ flexDirection: dir }}>\n        <WeightsPane />\n        <div className=\"inputs\" style={{ flexDirection: inputdir, maxWidth: maxinputwidth }}>\n          <TagInput />\n          <div className=\"spacer\"></div>\n          <WeightInput />\n        </div>\n      </div>\n    );\n  }\n\n});\n","import _ from 'lodash';\nimport moment from 'moment';\nimport { set } from 'cerebral/operators';\nimport { state,props } from 'cerebral/tags';\nimport { sequence, parallel } from 'cerebral';\n\nimport * as treatments from 'aultfarms-lib/treatments/module/sequences';\nimport * as incoming   from 'aultfarms-lib/incoming/module/sequences';\nimport * as dead       from 'aultfarms-lib/dead/module/sequences';\nimport * as weights    from 'aultfarms-lib/weights/module/sequences';\nimport * as trello     from 'aultfarms-lib/trello/module/sequences';\nimport * as google     from 'aultfarms-lib/google/module/sequences';\nimport * as windowSize from 'aultfarms-lib/windowSize/module/sequences';\nimport { groupForTag } from 'aultfarms-lib/util/tagHelpers';\n\n\n//------------------------------------------------------\n// Help for scrolling:\nconst scrollToTag = () => {\n  const el = document.getElementById('tagScrollToMe');\n  if (el) el.scrollIntoView();\n};\nconst scrollToWeight = () => {\n  const el = document.getElementById('weightScrollToMe');\n  if (el) el.scrollIntoView();\n};\n\n\n//-------------------------------------------------------\n// Misc view functions\nexport const changeTab = [ set(state`tabSelector.active`, props`active`), ];\nexport const tabGroupSortClicked = [ set(state`tabGroup.sort`, props`sort`) ];\nexport const logout = [ trello.deauthorize, trello.authorize];\n\n//-------------------------------------------------------\n// Changing values\nexport const changeDate = sequence('changeDate',  [ set(state`date`, props`date`) ]);\n\nexport const loadWeightsForDate = sequence('loadWeightsForDate', [\n  set(props`date`, state`date`),\n  weights.clearCache,\n  weights.fetch,\n]);\nexport const changeWeight = sequence('changeWeight',[ set(state`weightInput.weight`, props`weight`), scrollToWeight ]);\nexport const    changeTag = sequence('changeTag',   [ \n  ({props,store}) => {\n    if (typeof props.tag.number !== 'undefined') store.set(state`tagInput.tag.number`, +(props.tag.number));\n    if (props.tag.color)  store.set(state`tagInput.tag.color`, props.tag.color);\n  }, \n  scrollToTag\n]); // tag, number\nexport const changeSort = sequence('changeSort', [\n  set(state`msg`, { type: 'bad', text: 'Saving sort type change...' }),\n  ({props,store}) => store.set(state`weights.records.${props.row}.sort`, props.value),\n  weights.saveRecordRow, // props: row, will pull record from state\n  set(state`msg`, { type: 'good', text: 'Sort type change saved' }),\n]);\n\nfunction loadInputFromRow({store,props,get}) {\n  const row = get(state`${props.whichInput}.row`);\n  const numrows = get(state`weights.records`).length;\n  if (props.whichInput === 'tagInput') {\n    if (row === numrows)\n      return store.set(state`tagInput.tag.number`, ''); // new row, reset input\n    const tag = get(state`weights.records.${row}.tag`);\n    if (tag) store.set(state`tagInput.tag`, _.clone(tag));\n  } \n  // otherwise, weight\n  if (row === numrows)\n    return store.set(state`weightInput.weight`, '');\n  const weight = get(state`weights.records.${row}.weight`);\n  store.set(state`weightInput.weight`, _.clone(weight)/10);\n}\nexport const moveInput = sequence('moveTagInput', [\n  ({store,props,get}) => { \n    let row = props.row;\n    if (props.row < 0) row = 0;\n    else {\n      const numrecords = get(state`weights.records`).length;\n      if (props.row > numrecords-1)  row = numrecords;\n    }\n    store.set(state`${props.whichInput}.row`, row);\n    return { row };\n  },\n  loadInputFromRow,\n  ({props}) => { if (props.whichInput === 'tagInput') return scrollToTag(); return scrollToWeight(); },\n]);\n \nexport const moveInputUp = sequence('moveInputUp', [ \n  ({props,get}) => { \n    const row = get(state`${props.whichInput}.row`)-1;\n    return { row };\n  },\n  moveInput,\n]);\nexport const moveInputDown = sequence('moveTagInputDown', [ \n  ({get,props}) => { \n    const row = get(state`${props.whichInput}.row`)+1;\n    return { row };\n  },\n  moveInput,\n]);\n\n\n\n//-------------------------------------------------------\n// Saving things\nfunction loadWeight({props,get}) {\n  if (props.weight) return;\n  const weight = get(state`weights.records.${props.row}.weight`);\n  if (!weight) return;\n  return { weight: _.cloneDeep(weight) };\n}\nfunction loadTag({props,get}) {\n  if (props.tag) return;\n  const tag = get(state`weights.records.${props.row}.tag`);\n  if (!tag) return;\n  return { tag: _.cloneDeep(tag) };\n}\nfunction loadGroupDays({props,get}) {\n  if (props.group) return;\n  if (!props.tag) return; // can't find group for null tag\n  let group = groupForTag(get(state`incoming.records`),props.tag);\n  if (!group) return;\n  const days = moment(get(state`date`),'YYYY-MM-DD').diff(moment(group.date,'YYYY-MM-DD'), 'days');\n  return { \n    group: _.cloneDeep(group.groupname), \n    days,\n    inDate: group.date,\n  };\n}\n\nfunction computeRoG({props,get}) {\n  if (!props.weight) return; \n  if (!props.group) return;\n  if (!props.days) return;\n  if (!props.tag) return; \n  const group = _.find(get(state`incoming.records`), r => r.groupname === props.group);\n  const days = props.days;\n  const adjWeight = props.weight / 0.98; // 2% scale offset\n  const lbsGain = adjWeight - group.weight;\n  const rog = lbsGain / days;\n  return {\n    adjWeight,\n    lbsGain,\n    rog,\n  };\n}\nfunction saveRecord({props,store,get}) {\n  const rec = get(state`weights.records.${props.row}`);\n  if (!rec) store.set(state`weights.records.${props.row}`, { row: props.row, date: get(state`date`), sort: 'SELL' });\n  const toMerge = {};\n  if (props.tag)      toMerge.tag       = _.clone(props.tag);\n  if (props.weight)   toMerge.weight    = props.weight;\n  if (props.adjWeight)toMerge.adjWeight = props.adjWeight;\n  if (props.lbsGain)  toMerge.lbsGain   = props.lbsGain;\n  if (props.group)    toMerge.group     = props.group;\n  if (props.days)     toMerge.days      = props.days;\n  if (props.rog)      toMerge.rog       = props.rog;\n  if (props.inDate)   toMerge.inDate    = props.inDate;\n  if (props.sort)     toMerge.sort      = props.sort;\n  store.merge(state`weights.records.${props.row}`, toMerge);\n  return { record: get(state`weights.records.${props.row}`) };\n}\nexport const saveTag = sequence('saveTag', [ \n  set(state`msg`, { type: 'bad', text: 'Saving tag...' }),\n  ({get}) => get(state`tagInput`), // put row and tag into props\n  loadGroupDays,\n  loadWeight,\n  computeRoG,\n  saveRecord,\n  weights.saveRecordRow, // props: row, will pull record from state\n  () => ({whichInput: 'tagInput'}),\n  moveInputDown,\n  set(state`msg`, { type: 'good', text: 'Tag Saved' }),\n]);\n\n\nexport const saveWeight = sequence('saveWeight', [\n  set(state`msg`, { type: 'bad', text: 'Saving weight...' }),\n  ({get}) => get(state`weightInput`), // put row and weight into props\n  ({props}) => ({ weight: props.weight * 10 }),\n  loadTag, // pull tag into props if it exists\n  loadGroupDays,\n  computeRoG,\n  saveRecord,\n  weights.saveRecordRow, // props: row, will pull record from state\n  () => ({whichInput: 'weightInput'}),\n  moveInputDown,\n  set(state`msg`, { type: 'good', text: 'Weight Saved' }),\n]);\n\n\n//-------------------------------------------------------\n// Initialization\nexport const init = sequence('init', [\n  windowSize.init,\n  set(state`msg`, { type: 'good', text: 'Checking trello authorization...' }),\n  trello.authorize,\n  set(state`msg`, { type: 'good', text: 'Checking google authorization...' }),\n  google.authorize,\n  set(state`msg`, { type: 'good', text: 'Fetching records...' }),\n  parallel('parallel fetch', [\n    treatments.fetch,\n    treatments.fetchConfig,\n    incoming.fetch,\n    dead.fetch,\n    loadWeightsForDate,\n  ]),\n  set(state`msg`, { type: 'good', text: 'Computing stats...' }),\n  incoming.computeStats,\n  // Move inputs to bottom row\n  ({store,get}) => {\n    const lastrow = get(state`weights.records`).length;\n    store.set(state`tagInput.row`, lastrow);\n    store.set(state`weightInput.row`, lastrow);\n  },\n  set(state`recordsValid`, true),\n  set(state`msg`, { type: 'good', text: 'Loaded successfully.'}),\n  scrollToTag,\n]);\n","import moment from 'moment';\nimport { set } from 'cerebral/factories';\nimport { state } from 'cerebral/tags';\n\nimport treatmentsModule from 'aultfarms-lib/treatments/module';\nimport   incomingModule from 'aultfarms-lib/incoming/module';\nimport       deadModule from 'aultfarms-lib/dead/module';\nimport    weightsModule from 'aultfarms-lib/weights/module';\nimport     trelloModule from 'aultfarms-lib/trello/module';\nimport     googleModule from 'aultfarms-lib/google/module';\nimport windowSizeModule from 'aultfarms-lib/windowSize/module';\n\nimport     trelloProvider from 'aultfarms-lib/trello/provider';\nimport     googleProvider from 'aultfarms-lib/google/provider';\nimport windowSizeProvider from 'aultfarms-lib/windowSize/provider';\n\nimport * as trelloErrors from 'aultfarms-lib/trello/module/errors';\n\nimport * as sequences from './sequences';\n\nexport default {\n  sequences,\n  state: { \n    recordsValid: false,\n    date: moment().format('YYYY-MM-DD'),\n    tabSelector: {\n      active: 'weights', // weights/tag/group/dead\n    },\n    tagInput: {\n      row: 0,\n      tag: {\n        number: '',\n        color: '',\n      },\n    },\n    weightInput: {\n      row: 0,\n      weight: '',\n    },\n    limits: {\n      light: 1200,\n      heavy: 1530,\n    },\n    msg: {\n      type: 'bad',\n      text: 'Initializing...',\n    },\n  },\n  modules: {\n    treatments: treatmentsModule,\n      incoming: incomingModule,\n          dead: deadModule,\n       weights: weightsModule,\n        trello: trelloModule,\n        google: googleModule,\n    windowSize: windowSizeModule,\n  },\n  providers: {\n        trello: trelloProvider,\n        google: googleProvider,\n    windowSize: windowSizeProvider,\n  },\n  catch: [\n    [ trelloErrors.TrelloSaveError,      [ set(state`msg`, 'ERROR: failed to save in Trello')      ] ],\n    [ trelloErrors.TrelloGetError,       [ set(state`msg`, 'ERROR: failed to get in Trello')       ] ],\n    [ trelloErrors.TrelloAuthorizeError, [ set(state`msg`, 'ERROR: failed to authorize in Trello') ] ],\n  ],\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import registerServiceWorker from './registerServiceWorker';\nimport CerebralApp from 'cerebral';\nimport { Container } from '@cerebral/react';\nimport devtools from 'cerebral/devtools';\n\nimport App from './App';\nimport AppModule from './module';\n\nimport 'pure-css';\nimport './index.css';\n\nconst controller = CerebralApp(AppModule, {\n  devtools: process.env.NODE_ENV === 'production' ? null : devtools({host: 'localhost:8000', reconnect: true }),\n});\n\n\n// Render the root node:\nReactDOM.render(\n  <Container app={controller}>\n    <App />\n  </Container>, document.getElementById('root')\n);\n\n//registerServiceWorker();\n\n"],"sourceRoot":""}