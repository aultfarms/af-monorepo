{"version":3,"sources":["Msg.js","TabWeights.js","TabTag.js","TabGroup.js","TabDead.js","Prefs.js","TabContainer.js","TabSelector.js","WeightDateBar.js","WeightsPane.js","Keypad.js","Colorbar.js","TagBar.js","TagInput.js","WeightInput.js","App.js","module/sequences.js","module/index.js","index.js"],"names":["connect","msg","state","_templateObject","props","react_default","a","createElement","className","type","text","records","TabWeights_templateObject","colors","_templateObject2","tagInput","_templateObject3","weightInput","_templateObject4","moveInput","sequences","_templateObject5","changeSort","_templateObject6","_React$Component","TabWeights","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","extrarowtagactive","row","length","extrarowweightactive","extrarowcolor","tag","color","refTagActiveElement","scrollIntoView","width","_","map","r","i","tagactive","weightactive","onClick","whichInput","id","style","borderColor","number","align","weight","group","str","parts","split","substr","join","truncateGroupName","days","rog","numeral","format","onChange","evt","target","sort","React","Component","groups","TabGroup_templateObject","treatments","TabGroup_templateObject2","sortBy","TabGroup_templateObject3","sortBySignal","TabGroup_templateObject4","all_groups","g","day","groupname","dead","head","reverse","perc","name","slice","moment","date","extendMoment","Moment","deadRecords","TabDead_templateObject","today","lastmonth","range","clone","subtract","lastthreemonths","lastyear","deadlastmonth","filter","within","deadlastthreemonths","deadlastyear","totallastmonth","reduce","sum","tags","totallastthreemonths","totallastyear","diff","logout","Prefs_templateObject","href","preventDefault","tabSelector","TabContainer_templateObject","ret","active","src_TabWeights_0","src_TabTag","src_TabGroup_0","src_TabDead","src_Prefs_0","TabSelector_templateObject","changeTab","TabSelector_templateObject2","lib_default","WeightDateBar_templateObject","WeightDateBar_templateObject2","limits","WeightDateBar_templateObject3","changeDate","WeightDateBar_templateObject4","loadWeightsForDate","WeightDateBar_templateObject5","changeLightLimit","WeightDateBar_templateObject6","changeHeavyLimit","_templateObject7","heavyhead","heavy","stats","acc","adjWeight","console","log","which","lbsGain","count","all","ALL","SELL","HEAVY","KEEP","JUNK","SPECIAL1","renderStatsObj","obj","Card_default","onBlur","label","size","arr","cloneDeep","each","s","renderCombinedStats","windowSize","WeightsPane_templateObject","height","orientation","src_Msg_0","src_TabSelector_0","src_WeightDateBar_0","src_TabContainer","Keypad","disableKeypress","keyCode","onBackspace","onNumber","document","addEventListener","keypressed","bind","removeEventListener","n","_this","onClear","_this2","info","isObject","val","clicked","numberClicked","renderCalcRow","clearClicked","backspaceClicked","Colorbar_templateObject","Colorbar_templateObject2","changeTag","Colorbar_templateObject3","Colorbar","keys","c","k","colorButtonClicked","backgroundColor","TagBar_templateObject","TagBar_templateObject2","TagBar_templateObject3","recordsValid","TagInput_templateObject","TagInput_templateObject2","TagInput_templateObject3","saveTag","TagInput_templateObject4","moveUp","TagInput_templateObject5","moveDown","TagInput_templateObject6","canSave","src_TagBar_0","src_Colorbar_0","src_Keypad_0","num","prefix","WeightInput_templateObject","WeightInput_templateObject2","changeWeight","WeightInput_templateObject3","saveWeight","WeightInput_templateObject4","WeightInput_templateObject5","WeightInput_templateObject6","disabled","App_templateObject","init","App_templateObject2","App","dir","inputdir","maxinputwidth","flexDirection","src_WeightsPane_0","maxWidth","src_TagInput_0","src_WeightInput_0","scrollToTag","el","getElementById","scrollToWeight","set","sequences_templateObject","sequences_templateObject2","tabGroupSortClicked","sequences_templateObject3","sequences_templateObject4","trello","sequence","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","weights","_templateObject13","_templateObject14","_ref","store","_templateObject15","_templateObject16","_templateObject17","_ref2","_templateObject18","_templateObject19","_ref4","get","numrecords","_templateObject28","_templateObject29","_ref3","_templateObject20","numrows","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","_ref5","moveInputUp","_ref6","_templateObject30","moveInputDown","_ref7","_templateObject31","loadGroupDays","_ref10","groupForTag","_templateObject34","_templateObject35","inDate","computeRoG","_ref11","find","_templateObject36","saveRecord","_ref12","_templateObject37","_templateObject38","_templateObject39","toMerge","merge","_templateObject40","record","_templateObject41","_templateObject42","_ref13","_templateObject43","_ref8","_templateObject32","_templateObject44","_templateObject45","_ref14","_templateObject46","_ref15","_ref9","_templateObject33","_templateObject47","_templateObject48","_templateObject49","google","_templateObject50","parallel","incoming","_templateObject51","_ref16","lastrow","_templateObject52","_templateObject53","_templateObject54","_templateObject55","_templateObject56","src_module","light","modules","treatmentsModule","incomingModule","deadModule","weightsModule","trelloModule","googleModule","windowSizeModule","providers","trelloProvider","googleProvider","windowSizeProvider","catch","trelloErrors","module_templateObject","module_templateObject2","module_templateObject3","controller","CerebralApp","AppModule","devtools","ReactDOM","render","_cerebral_react","app","src_App_0"],"mappings":"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","file":"static/js/main.dac0239f.chunk.js","sourcesContent":["import React from  'react';\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral';\n\nimport './Msg.css';\n\nexport default connect({\n  msg: state`msg`,\n}, function Msg(props) {\n  return (\n    <div className={'msg msg' + props.msg.type}>\n      {props.msg.text}\n    </div>\n   );\n});\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport './TabWeights.css';\n\nfunction truncateGroupName(str) {\n  const parts = _.split(str, ':');\n  if (parts[0].length > 6) {\n    parts[0] = parts[0].substr(0,3)+'...'+parts[0].substr(-3);\n  }\n  return _.join(parts, ':');\n}\n\nexport default connect({\n      records: state`weights.records`,\n       colors: state`treatments.colors`,\n     tagInput: state`tagInput`,\n  weightInput: state`weightInput`,\n    moveInput: sequences`moveInput`,\n   changeSort: sequences`changeSort`,\n}, class TabWeights extends React.Component {\n\n  render() {\n    const props = this.props;\n    const extrarowtagactive = props.tagInput.row === props.records.length;\n    const extrarowweightactive = props.weightInput.row === props.records.length;\n    const extrarowcolor = (props.tagInput.tag && props.tagInput.tag.color) ? props.colors[props.tagInput.tag.color] : 'black';\n    if (this.refTagActiveElement) this.refTagActiveElement.scrollIntoView();\n    return (\n      <div className=\"tabweights\">\n        <table className=\"tabweightstable\">\n          <thead>\n            <tr>\n              <th width=\"25%\">Tag</th>\n              <th width=\"10%\">Weight</th>\n              <th width=\"25%\">Group</th>\n              <th width=\"8%\">Days</th>\n              <th width=\"8%\">RoG</th>\n              <th width=\"24%\">Sort</th>\n            </tr>\n          </thead>\n          <tbody>\n        { _.map(props.records, (r,i) => {\n          const color = (r.tag && r.tag.color) ? props.colors[r.tag.color] : 'black';\n          const tagactive = props.tagInput.row === i;\n          const weightactive = props.weightInput.row === i;\n          const tag = tagactive ? props.tagInput.tag : r.tag;\n          return <tr key={'tabweightstablerow'+i} className='tabweightstablerow'>\n            <td className={'tabweightstablecol ' + (tagactive ? 'tagactive ' : '')} \n                onClick={() => props.moveInput({ whichInput: 'tagInput', row: i })}\n                id={tagactive ? 'tagScrollToMe' : 'tagDoNotScrollToMe' }>\n              <div className=\"tabweightstagtext\" style={{ color, borderColor: color }}>\n                {(tag && tag.color) ? tag.color : '' } {(tag && tag.number) ? tag.number : ''}\n              </div>\n            </td>\n            <td className={'tabweightstablecol ' + (weightactive ? 'weightactive' : '') }\n                onClick={() => props.moveInput({ whichInput: 'weightInput', row: i })}\n                id={weightactive ? 'weightScrollToMe' : 'weightDoNotScrollToMe' }\n                align=\"center\">\n              { weightactive ? props.weightInput.weight * 10 : r.weight }\n            </td>\n            <td className='tabweightstablecol' align=\"center\">\n              { r.group ? truncateGroupName(r.group) : 'none' }\n            </td>\n            <td className='tabweightstablecol' align=\"center\">\n              {r.days ? r.days : '' }\n            </td>\n            <td className='tabweightstablecol' align=\"center\">\n              {r.rog ? numeral(r.rog).format('0.00') : '' }\n            </td>\n            <td className='tabweightstablecol' align=\"center\">\n              <select \n                onChange={(evt) => props.changeSort({ row: i, value: evt.target.value })}\n                value={ r.sort || 'SELL' }\n              >\n                <option value='SELL'>SELL</option>\n                <option value='HEAVY'>HEAVY</option>\n                <option value='KEEP'>KEEP</option>\n                <option value='JUNK'>JUNK</option>\n                <option value='SPECIAL1'>SPECIAL1</option>\n              </select>\n            </td>\n  \n          </tr>})\n        }\n        {\n          <tr key=\"extrarow\" className='tabweightstablerow'>\n            <td className={'tabweightstablecol ' + (extrarowtagactive ? 'tagactive' : '') }\n              onClick={() => props.moveInput({ whichInput: 'tagInput', row: props.records.length })}\n              id={extrarowtagactive ? 'tagScrollToMe' : false}>\n              { extrarowtagactive ? \n                  <div className=\"tabweightstagtext\" style={{ color: extrarowcolor, borderColor: extrarowcolor }}>\n                    {(props.tagInput.tag && props.tagInput.tag.color) ? props.tagInput.tag.color : '' } {(props.tagInput.tag && props.tagInput.tag.number) ? props.tagInput.tag.number : ''}\n                  </div>\n                : ' '\n              }\n            </td>\n            <td className={'tabweightstablecol ' + (extrarowweightactive ? 'weightactive' : '') }\n              onClick={() => props.moveInput({ whichInput: 'weightInput', row: props.records.length })}\n              id={extrarowweightactive ? 'weightScrollToMe' : false}>\n              { extrarowweightactive ? props.weightInput.weight * 10 : '' }\n            </td>\n            <td className={'tabweightstablecol'}>\n            </td>\n            <td className={'tabweightstablecol'}>\n            </td>\n            <td className={'tabweightstablecol'}>\n            </td>\n            <td className={'tabweightstablecol'}>\n            </td>\n\n          </tr>\n        }\n        </tbody>\n        </table>\n      </div>\n    );\n  }\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\n\nexport default connect({\n}, function TabTag(props) {\n  return (\n    <div className=\"tabtag\">\n      This is the tag tab\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport './TabGroup.css';\n\nexport default connect({\n     groups: state`incoming.records`,\n treatments: state`treatments.records`,\n     sortBy: state`historyGroup.sort`,\n sortBySignal: sequences`tabGroupSortClicked`,\n}, function TabGroup(props) {\n  let all_groups = props.groups;\n  all_groups = _.sortBy(all_groups, g => {\n    if (props.sortBy === 'date') return g.day; // day string is lexicographic for sorting\n    if (props.sortBy === 'name') return g.groupname;\n    if (props.sortBy === 'dead') return g.dead;\n    if (props.sortBy === 'perc') return (g.dead ? g.dead.length : 0) / (g.head ? g.head : 1);\n    return g.day; // default\n  });\n  all_groups = _.reverse(all_groups); // other way seems better\n  return (\n    <div className=\"tabgroup\">\n      <table width=\"100%\">\n      <tbody>\n        <tr>\n          <th onClick={() => props.sortBySignal({ sort: 'name'})}>Name</th>\n          <th onClick={() => props.sortBySignal({ sort: 'date'})}>Date</th>\n          <th onClick={() => props.sortBySignal({ sort: 'dead'})}>Dead</th>\n          <th onClick={() => props.sortBySignal({ sort: 'perc'})}>%</th>\n        </tr>\n      { \n        _.map(all_groups, (g,i) => {\n          let perc = 0;\n          if (g.dead && g.head) perc = g.dead.length / g.head;\n          let name = g.groupname;\n          if (name.length > 15) name = name.slice(0,6)+'...'+name.slice(-6);\n          return (\n            <tr className={ perc < .05 ? 'tabgroupgood' : perc < 0.1 ? 'tabgroupmeh' : 'tabgroupbad' } key={'tabgrouprow'+i}>\n              <td className=\"tabgroupname\"><span name=\"tabgroupnamepill\">{ name }</span></td>\n              <td className=\"tabgroupdate\"> { moment(g.date,'YYYY-MM-DD').format('M/DD/YY') }</td>\n              <td className=\"tabgroupdead\">{ g.dead ? g.dead.length : 0 }</td>\n              <td className=\"tabgroupperc\">{ perc > 0 ? '('+numeral(perc).format('0.00%')+')' : '' }</td>\n            </tr>\n          );\n        })\n      }\n      </tbody>\n      </table>\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport { extendMoment } from 'moment-range';\nimport Moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nconst moment = extendMoment(Moment);\n\nexport default connect({\n      deadRecords: state`dead.records`,\n}, function TabDead(props) {\n\n  const today = moment();\n  const lastmonth = moment.range(today.clone().subtract(1,'months'),today);\n  const lastthreemonths = moment.range(today.clone().subtract(3,'months'),today);\n  const lastyear = moment.range(today.clone().subtract(1,'years'),today);\n\n  const deadlastmonth       = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastmonth));\n  const deadlastthreemonths = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastthreemonths));\n  const deadlastyear        = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastyear));\n\n  const totallastmonth       = _.reduce(deadlastmonth,       (sum,r) => sum+r.tags.length, 0);\n  const totallastthreemonths = _.reduce(deadlastthreemonths, (sum,r) => sum+r.tags.length, 0);\n  const totallastyear        = _.reduce(deadlastyear,        (sum,r) => sum+r.tags.length, 0);\n  return (\n    <div className=\"tabdead\">\n      <div className=\"tabdeadentry\">\n        Past month: {totallastmonth} dead ({numeral(totallastmonth/lastmonth.diff('days')).format('0.00')}/day)\n      </div>\n      <div className=\"tabdeadentry\">\n        Past 3 months: {totallastthreemonths} dead ({numeral(totallastthreemonths/lastthreemonths.diff('days')).format('0.00')}/day)\n      </div>\n      <div className=\"tabdeadentry\">\n        Past year: {totallastyear} dead ({numeral(totallastyear/lastyear.diff('days')).format('0.00')}/day)\n      </div>\n    </div>\n  );\n});\n\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { sequences } from 'cerebral';\n\nimport './Prefs.css';\n\nexport default connect({\n  logout: sequences`logout`,\n}, function Prefs(props) {\n\n  const logoutClicked = evt => {\n    props.logout();\n    evt.preventDefault();\n  }\n\n  return (\n    <div className=\"prefs\">\n      <a href=\"#top\" className=\"prefslink\" onClick={logoutClicked}>Change Trello Account</a>\n    </div>\n  );\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral';\n\nimport  TabWeights from './TabWeights';\nimport      TabTag from './TabTag';\nimport    TabGroup from './TabGroup';\nimport     TabDead from './TabDead';\nimport       Prefs from './Prefs';\n\nimport './TabContainer.css';\n\nexport default connect({\n   tabSelector: state`tabSelector`,\n}, function TabsContainer(props) {\n  let ret = (<div className='tabscontainer'>Unknown Tab Type</div>);\n  switch(props.tabSelector.active) {\n    case 'weights': ret = <TabWeights />;  break;\n    case     'tag': ret = <TabTag     />;   break;\n    case   'group': ret = <TabGroup   />; break;\n    case    'dead': ret = <TabDead    />;  break;\n    case   'prefs': ret = <Prefs      />;  break;\n    default:\n  }\n  return ret;\n});\n\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport './TabSelector.css';\n\nexport default connect({\n  tabSelector: state`tabSelector`,\n  changeTab: sequences`changeTab`,\n}, function TabSelector(props) {\n  const   prefsClicked = evt => props.changeTab({ active: 'prefs' });\n  const weightsClicked = evt => props.changeTab({ active: 'weights' });\n  const     tagClicked = evt => props.changeTab({ active: 'tag' });\n  const   groupClicked = evt => props.changeTab({ active: 'group' });\n  const    deadClicked = evt => props.changeTab({ active: 'dead' });\n\n  return (\n    <div className=\"tabselector\">\n      <div className={'tabselectorbutton ' + (props.tabSelector.active === 'prefs' ? 'tabselectorbuttonactive' : '')}\n           onClick={prefsClicked}>\n        <FontAwesome name='bars' />\n      </div>\n      <div className={'tabselectorbutton ' + (props.tabSelector.active === 'weights' ? 'tabselectorbuttonactive' : '')}\n           onClick={weightsClicked}>\n        Weights\n      </div>\n      <div className={'tabselectorbutton ' + (props.tabSelector.active === 'tag' ? 'tabselectorbuttonactive' : '')}\n           onClick={tagClicked}>\n        Tag\n      </div>\n      <div className={'tabselectorbutton ' + (props.tabSelector.active === 'group' ? 'tabselectorbuttonactive' : '')}\n           onClick={groupClicked}>\n        Group\n      </div>\n      <div className={'tabselectorbutton ' + (props.tabSelector.active === 'dead' ? 'tabselectorbuttonactive' : '')}\n           onClick={deadClicked}>\n        Dead\n      </div>\n\n    </div>\n  );\n\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport Card from '@material-ui/core/Card';\n\nimport './WeightDateBar.css';\n\nexport default connect({\n          date: state`date`,\n       records: state`weights.records`,\n        limits:  state`limits`,\n          changeDate: sequences`changeDate`,\n  loadWeightsForDate: sequences`loadWeightsForDate`,\n    changeLightLimit: sequences`changeLightLimit`,\n    changeHeavyLimit: sequences`changeHeavyLimit`,\n}, function WeightDateBar(props) {\n\n  const dateChanged = evt => {\n    evt.preventDefault();\n    props.changeDate({date: evt.target.value});\n  };\n\n  const heavyhead = _.filter(props.records, r => r.weight && r.weight > props.limits.heavy).length;\n  const stats = _.reduce(props.records, (acc,r) => { \n    if (!r.sort || !r.adjWeight || !r.tag) { console.log('invalid record, r = ', r); return acc; }\n\n    const which = acc[r.sort]; // SELL, KEEP, HEAVY, JUNK\n    which.lbsGain += r.lbsGain || 0; \n    which.days += r.days || 0; \n    which.adjWeight += r.adjWeight;\n    which.count++;\n    const all = acc.ALL;\n    all.lbsGain += r.lbsGain || 0; \n    all.days += r.days || 0; \n    all.adjWeight += r.adjWeight;\n    all.count++;\n\n    return acc; \n  }, {\n         ALL: { lbsGain: 0, days: 0, adjWeight: 0, count: 0 },\n        SELL: { lbsGain: 0, days: 0, adjWeight: 0, count: 0 },\n       HEAVY: { lbsGain: 0, days: 0, adjWeight: 0, count: 0 },\n        KEEP: { lbsGain: 0, days: 0, adjWeight: 0, count: 0 },\n        JUNK: { lbsGain: 0, days: 0, adjWeight: 0, count: 0 },\n    SPECIAL1: { lbsGain: 0, days: 0, adjWeight: 0, count: 0 },\n  });\n\n  function renderStatsObj(name, obj) {\n    return <Card key={'weightdatebarstats'+name} className=\"weightdatebarcardouter\">\n      <div className=\"weightdatebarcardtitle\">\n        { name }\n      </div>\n      <div className=\"weightdatebarcardinner\">\n        <div className='weightdatebarfilter'>\n          { obj.count + ' head' }\n        </div>\n        <div className='weightdatebarfilter'>\n          { obj.days ? numeral(obj.lbsGain / obj.days).format('0.00') : 0 } RoG\n        </div>\n        <div className='weightdatebarfilter'>\n          { obj.count ? numeral(obj.adjWeight / obj.count).format('0') : 0 } lbs\n        </div>\n      </div>\n    </Card>\n\n  }\n\n  function renderStats(which) {\n    return renderStatsObj(which, stats[which]);\n  }\n\n  function renderCombinedStats(arr) {\n    const obj = _.cloneDeep(stats[arr[0]]);\n    _.each(arr.slice(1), which => {\n      const s = stats[which];\n      obj.count += s.count;\n      obj.lbsGain += s.lbsGain;\n      obj.adjWeight += s.adjWeight;\n    });\n    return renderStatsObj(_.join(arr, '+'), obj);\n  }\n  \n  return (\n    <div className=\"weightdatebar\">\n      <Card className=\"weightdatebarcardouter\">\n        <div className=\"weightdatebarcardtitle\">\n          Date / Heavy Filter\n        </div>\n        <div className=\"weightdatebarcardinner\">\n          <input className='weightdatebarinput'\n                   value={props.date}\n                   type=\"date\"\n                   onChange={dateChanged}\n                   onBlur={() => props.loadWeightsForDate()}/>\n          <div className='weightdatebarfilter'>\n            { heavyhead } &gt;\n              <input className='weightdatebarinput' \n                 label='Heavy' \n                 size='5'\n                 value={props.limits.heavy} onChange={evt => { evt.preventDefault(); props.changeHeavyLimit({ heavy: evt.target.value})} } />\n            lbs\n          </div>\n        </div>\n      </Card>\n      { _.map(['ALL', 'SELL', 'HEAVY', 'KEEP', 'JUNK' ], renderStats) }\n      { renderCombinedStats(['SELL', 'HEAVY']) }\n\n    </div>\n  );\n});\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral';\n\nimport Msg from './Msg';\nimport TabContainer from './TabContainer';\nimport TabSelector from './TabSelector';\nimport WeightDateBar from './WeightDateBar';\n\nimport './WeightsPane.css';\n\nexport default connect({\n  windowSize: state`windowSize`,\n}, function WeightsPane(props) {\n  return (\n    <div className='weightspane' style={{ height: props.windowSize.orientation === 'landscape' ? '100vh' : '100vw' }}>\n      <Msg />\n      <TabSelector />\n      <WeightDateBar />\n      <TabContainer />\n    </div>\n   );\n});\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\n\nimport './Keypad.css';\n\nexport default connect({\n}, class Keypad extends React.Component {\n\n  keypressed(evt) {\n    if (this.props.disableKeypress) return; \n    if (evt.keyCode === 8) {\n      this.props.onBackspace(); // backspace\n      evt.preventDefault();\n    }\n    const number = evt.keyCode - 48; // 0 is key 48\n    if (number >= 0 && number <=9) {\n      this.props.onNumber(number);\n      evt.preventDefault();\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressed.bind(this));\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressed.bind(this));\n  }\n\n  numberClicked(n) {\n    return (evt) => {\n      evt.preventDefault();\n      this.props.onNumber(n);\n    }\n  }\n\n  clearClicked(evt) {\n    evt.preventDefault();\n    this.props.onClear();\n  }\n\n  backspaceClicked(evt) {\n    evt.preventDefault();\n    this.props.onBackspace();\n  }\n\n  renderCalcRow(arr) {\n    return (\n      <div className=\"keypadrow\"> \n        {\n          arr.map(info => \n              <div className=\"keypadbutton\"\n                   key={'calcwrap'+(_.isObject(info) ? info.val : info)}\n                   onClick={_.isObject(info) ? info.clicked : this.numberClicked(info).bind(this) }>\n                {_.isObject(info) ? info.val : info}\n              </div>\n          )\n        }\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"keypad\">\n        {this.renderCalcRow([1,2,3])}\n        {this.renderCalcRow([4,5,6])}\n        {this.renderCalcRow([7,8,9])}\n        { \n          this.renderCalcRow([\n            { val: 'C', clicked: this.clearClicked.bind(this) },\n            0,\n            { val: '<--', clicked: this.backspaceClicked.bind(this) },\n          ])\n        }\n      </div>\n    );\n  }\n});\n\n\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport './Colorbar.css';\n\nexport default connect({\n     tag: state`tagInput.tag`,\n  colors: state`treatments.colors`,\n  changeTag: sequences`changeTag`,\n}, class Colorbar extends React.Component {\n\n  keypressed(evt) {\n    let color = '';\n    switch(evt.key) {\n      case 'y': color = 'YELLOW'; break;\n      case 'g': color = 'GREEN'; break;\n      case 'b': color = 'BLUE'; break;\n      case 'r': color = 'RED'; break;\n      case 'p': color = 'PURPLE'; break;\n      case 'w': color = 'WHITE'; break;\n      case 'n': color = 'NOTAG'; break;\n      default: return;\n    }\n    evt.preventDefault();\n    this.props.changeTag({tag: { color: color } });\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressed.bind(this));\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressed.bind(this));\n  }\n\n  colorButtonClicked(color) { \n    const props = this.props;\n    return evt => {\n      evt.preventDefault();\n      props.changeTag({tag: { color } });\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"colorbar\">\n        {_.keys(this.props.colors).map((c,k) => \n            <div key={'color'+c} \n                 className=\"colorbutton\"\n                 onClick={this.colorButtonClicked(c)} \n                 style={{backgroundColor: this.props.colors[c] }}>\n            </div>\n         )}\n         <div key={'colorNOTAG'}\n              className=\"colorbutton\"\n              onClick={this.colorButtonClicked('NOTAG')}\n              style={{backgroundColor: '#CCCCCC'}}>\n        </div>\n      </div>\n    );\n  }\n\n});\n\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport './TagBar.css';\n\nexport default connect({\n     tag: state`tagInput.tag`,\n  colors: state`treatments.colors`,\n  changeTag: sequences`changeTag`,\n}, function TagBar(props) {\n  const colorTextChanged = evt => {\n    evt.preventDefault();\n    props.changeTag({tag: { color: evt.target.value} });\n  };\n\n  const tagNumberTextChanged = evt => {\n    evt.preventDefault();\n    props.changeTag({tag: { number: +(evt.target.value)} });\n  };\n\n  const color = props.colors[props.tag.color];\n  return (\n    <div className=\"tagbar\">\n      <input className=\"colortext\"\n             style={{ color: color, borderColor: color }}\n             value={props.tag.color}\n             type=\"text\"\n             onChange={colorTextChanged} />\n      <input className=\"numbertext\"\n             value={props.tag.number || ''} \n             type=\"text\" \n             onChange={tagNumberTextChanged} />\n    </div>\n  );\n\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport Keypad from './Keypad.js';\nimport Colorbar from './Colorbar.js';\nimport TagBar from './TagBar.js';\n\nimport './TagInput.css';\n\nexport default connect({\n  recordsValid: state`recordsValid`,\n      tagInput: state`tagInput`,\n     changeTag: sequences`changeTag`,\n       saveTag: sequences`saveTag`,\n        moveUp: sequences`moveInputUp`,\n      moveDown: sequences`moveInputDown`,\n}, function TagInput(props) {\n\n  const numberClicked = num => {\n    const prefix = '' + (props.tagInput.tag.number || ''); // convert to string\n    props.changeTag({tag: { number: prefix+num} });\n  };\n\n  const clearClicked = () => {\n    props.changeTag({ tag: { number: '', color: '' } });\n  };\n\n  const backspaceClicked = () => {\n    let str = ''+props.tagInput.tag.number;\n    if (str.length > 0) str = str.slice(0,-1);\n    props.changeTag({ tag: { number: +(str) } });\n  };\n\n  const canSave = props.recordsValid && props.tagInput.tag && props.tagInput.tag.number && props.tagInput.tag.color.length > 0;\n\n  const tagSaveClicked = evt => {\n    if (canSave) {\n      evt.preventDefault();\n      props.saveTag();\n    }\n  };\n\n  return (\n    <div className=\"taginput\">\n\n      <TagBar />\n\n      <Colorbar />\n\n      <Keypad onNumber={numberClicked}\n              onClear={clearClicked}\n              onBackspace={backspaceClicked}\n              disableKeypress={true}/>\n\n      <div className='taginputbuttonscontainer'>\n        <div className='taginputrowbutton taginputrowbuttonleft'\n             onClick={() => props.moveUp({ whichInput: 'tagInput' })}>\n          ^\n        </div>\n        <div className={'savebutton ' + (canSave ? 'savebuttonenabled':'savebuttondisabled')}\n           onClick={tagSaveClicked}>\n          SAVE TAG\n        </div>\n        <div className='taginputrowbutton taginputrowbuttonright'\n             onClick={() => props.moveDown({ whichInput: 'tagInput' })}>\n          v\n        </div>\n      </div>\n\n    </div>\n  );\n});\n","import React from 'react';\nimport numeral from 'numeral';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport Keypad from './Keypad.js';\n\nimport './WeightInput.css';\n\nexport default connect({\n  recordsValid: state`recordsValid`,\n   weightInput: state`weightInput`,\n  changeWeight: sequences`changeWeight`,\n    saveWeight: sequences`saveWeight`,\n        moveUp: sequences`moveInputUp`,\n      moveDown: sequences`moveInputDown`,\n}, function WeightInput(props) {\n\n  const numberClicked = num => {\n    const prefix = '' + (props.weightInput.weight || ''); // convert to string\n    props.changeWeight({weight: prefix+num});\n  };\n\n  const clearClicked = () => {\n    props.changeWeight({ weight: '' });\n  };\n\n  const backspaceClicked = () => {\n    let str = ''+props.weightInput.weight;\n    if (str.length > 0) str = str.slice(0,-1);\n    props.changeWeight({ weight: +(str) });\n  };\n\n  const canSave = props.recordsValid && props.weightInput.weight > 0;\n\n  const weightSaveClicked = evt => {\n    if (canSave) {\n      evt.preventDefault();\n      props.saveWeight();\n    }\n  };\n\n\n  return (\n    <div className=\"weightinput\">\n      <div className=\"weightinputdisplay\">\n        <input className=\"weightinputdisplayinput\"\n          size=\"8\"\n          disabled='disabled'\n          value={numeral(props.weightInput.weight*10).format(0,0) } />\n        lbs \n      </div>\n\n      <Keypad onNumber={numberClicked}\n              onClear={clearClicked}\n              onBackspace={backspaceClicked}\n              disableKeypress={true}/>\n\n      <div className='weightinputbuttonscontainer'>\n        <div className='weightinputrowbutton weightinputrowbuttonleft'\n             onClick={() => props.moveUp({ whichInput: 'weightInput' })}>\n          ^\n        </div>\n        <div className={'weightsavebutton ' + (canSave ? 'weightsavebuttonenabled':'weightsavebuttondisabled')}\n             onClick={weightSaveClicked}>\n          SAVE LBS\n        </div>\n        <div className='weightinputrowbutton weightinputrowbuttonright'\n             onClick={() => props.moveDown({ whichInput: 'weightInput' })}>\n          v\n        </div>\n      </div>\n\n    </div>\n  );\n});\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral';\n\nimport WeightsPane from './WeightsPane';\nimport TagInput from './TagInput';\nimport WeightInput from './WeightInput';\n\nimport './App.css';\n\nexport default connect({\n  windowSize: state`windowSize`,\n  init: sequences`init`,\n}, class App extends React.Component {\n\n  componentWillMount() {\n    this.props.init();\n  }\n\n  render() {\n    const dir = this.props.windowSize.orientation === 'landscape' ? 'row' : 'column';\n    const inputdir = dir === 'row' ? 'column' : 'row'; // arrange input opposite main layout\n    const maxinputwidth = inputdir === 'row' ? '100%' : '300px';\n\n    return (\n      <div className=\"App\" style={{ flexDirection: dir }}>\n        <WeightsPane />\n        <div className=\"inputs\" style={{ flexDirection: inputdir, maxWidth: maxinputwidth }}>\n          <TagInput />\n          <div className=\"spacer\"></div>\n          <WeightInput />\n        </div>\n      </div>\n    );\n  }\n\n});\n","import _ from 'lodash';\nimport moment from 'moment';\nimport { set } from 'cerebral/operators';\nimport { state,props } from 'cerebral/tags';\nimport { sequence, parallel } from 'cerebral';\n\nimport * as treatments from 'aultfarms-lib/treatments/module/sequences';\nimport * as incoming   from 'aultfarms-lib/incoming/module/sequences';\nimport * as dead       from 'aultfarms-lib/dead/module/sequences';\nimport * as weights    from 'aultfarms-lib/weights/module/sequences';\nimport * as trello     from 'aultfarms-lib/trello/module/sequences';\nimport * as google     from 'aultfarms-lib/google/module/sequences';\nimport * as windowSize from 'aultfarms-lib/windowSize/module/sequences';\nimport { groupForTag } from 'aultfarms-lib/util/tagHelpers';\n\n\n//------------------------------------------------------\n// Help for scrolling:\nconst scrollToTag = () => {\n  const el = document.getElementById('tagScrollToMe');\n  if (el) el.scrollIntoView();\n};\nconst scrollToWeight = () => {\n  const el = document.getElementById('weightScrollToMe');\n  if (el) el.scrollIntoView();\n};\n\n\n//-------------------------------------------------------\n// Misc view functions\nexport const changeTab = [ set(state`tabSelector.active`, props`active`), ];\nexport const tabGroupSortClicked = [ set(state`tabGroup.sort`, props`sort`) ];\nexport const logout = [ trello.deauthorize, trello.authorize];\n\n//-------------------------------------------------------\n// Changing values\nexport const changeLightLimit = sequence('changeLightLimit', [ set(state`limits.light`, props`light`) ]);\nexport const changeHeavyLimit = sequence('changeHeavyLimit', [ set(state`limits.heavy`, props`heavy`) ]);\nexport const   changeDate = sequence('changeDate',  [ \n  set(state`date`, props`date`),\n]);\nexport const loadWeightsForDate = sequence('loadWeightsForDate', [\n  set(props`date`, state`date`),\n  weights.clearCache,\n  weights.fetch,\n]);\nexport const changeWeight = sequence('changeWeight',[ set(state`weightInput.weight`, props`weight`), scrollToWeight ]);\nexport const    changeTag = sequence('changeTag',   [ \n  ({props,store}) => {\n    if (typeof props.tag.number !== 'undefined') store.set(state`tagInput.tag.number`, +(props.tag.number));\n    if (props.tag.color)  store.set(state`tagInput.tag.color`, props.tag.color);\n  }, \n  scrollToTag\n]); // tag, number\nexport const changeSort = sequence('changeSort', [\n  set(state`msg`, { type: 'bad', text: 'Saving sort type change...' }),\n  ({props,store}) => store.set(state`weights.records.${props.row}.sort`, props.value),\n  weights.saveRecordRow, // props: row, will pull record from state\n  set(state`msg`, { type: 'good', text: 'Sort type change saved' }),\n]);\n\nfunction loadInputFromRow({store,props,get}) {\n  const row = get(state`${props.whichInput}.row`);\n  const numrows = get(state`weights.records`).length;\n  if (props.whichInput === 'tagInput') {\n    if (row === numrows)\n      return store.set(state`tagInput.tag.number`, ''); // new row, reset input\n    const tag = get(state`weights.records.${row}.tag`);\n    if (tag) store.set(state`tagInput.tag`, _.clone(tag));\n  } \n  // otherwise, weight\n  if (row === numrows)\n    return store.set(state`weightInput.weight`, '');\n  const weight = get(state`weights.records.${row}.weight`);\n  store.set(state`weightInput.weight`, _.clone(weight)/10);\n}\nexport const moveInput = sequence('moveTagInput', [\n  ({store,props,get}) => { \n    let row = props.row;\n    if (props.row < 0) row = 0;\n    else {\n      const numrecords = get(state`weights.records`).length;\n      if (props.row > numrecords-1)  row = numrecords;\n    }\n    store.set(state`${props.whichInput}.row`, row);\n    return { row };\n  },\n  loadInputFromRow,\n  ({props}) => { if (props.whichInput === 'tagInput') return scrollToTag(); return scrollToWeight(); },\n]);\n \nexport const moveInputUp = sequence('moveInputUp', [ \n  ({props,get}) => { \n    const row = get(state`${props.whichInput}.row`)-1;\n    return { row };\n  },\n  moveInput,\n]);\nexport const moveInputDown = sequence('moveTagInputDown', [ \n  ({get,props}) => { \n    const row = get(state`${props.whichInput}.row`)+1;\n    return { row };\n  },\n  moveInput,\n]);\n\n\n\n//-------------------------------------------------------\n// Saving things\nfunction loadWeight({props,get}) {\n  if (props.weight) return;\n  const weight = get(state`weights.records.${props.row}.weight`);\n  if (!weight) return;\n  return { weight: _.cloneDeep(weight) };\n}\nfunction loadTag({props,get}) {\n  if (props.tag) return;\n  const tag = get(state`weights.records.${props.row}.tag`);\n  if (!tag) return;\n  return { tag: _.cloneDeep(tag) };\n}\nfunction loadGroupDays({props,get}) {\n  if (props.group) return;\n  if (!props.tag) return; // can't find group for null tag\n  let group = groupForTag(get(state`incoming.records`),props.tag);\n  if (!group) return;\n  const days = moment(get(state`date`),'YYYY-MM-DD').diff(moment(group.date,'YYYY-MM-DD'), 'days');\n  return { \n    group: _.cloneDeep(group.groupname), \n    days,\n    inDate: group.date,\n  };\n}\n\nfunction computeRoG({props,get}) {\n  if (!props.weight) return; \n  if (!props.group) return;\n  if (!props.days) return;\n  if (!props.tag) return; \n  const group = _.find(get(state`incoming.records`), r => r.groupname === props.group);\n  const days = props.days;\n  const adjWeight = props.weight / 0.98; // 2% scale offset\n  const lbsGain = adjWeight - group.weight;\n  const rog = lbsGain / days;\n  return {\n    adjWeight,\n    lbsGain,\n    rog,\n  };\n}\nfunction saveRecord({props,store,get}) {\n  const rec = get(state`weights.records.${props.row}`);\n  if (!rec) store.set(state`weights.records.${props.row}`, { row: props.row, date: get(state`date`) });\n  const toMerge = {};\n  if (props.tag)      toMerge.tag       = _.clone(props.tag);\n  if (props.weight)   toMerge.weight    = props.weight;\n  if (props.adjWeight)toMerge.adjWeight = props.adjWeight;\n  if (props.lbsGain)  toMerge.lbsGain   = props.lbsGain;\n  if (props.group)    toMerge.group     = props.group;\n  if (props.days)     toMerge.days      = props.days;\n  if (props.rog)      toMerge.rog       = props.rog;\n  if (props.inDate)   toMerge.inDate    = props.inDate;\n  store.merge(state`weights.records.${props.row}`, toMerge);\n  return { record: get(state`weights.records.${props.row}`) };\n}\nexport const saveTag = sequence('saveTag', [ \n  set(state`msg`, { type: 'bad', text: 'Saving tag...' }),\n  ({get}) => get(state`tagInput`), // put row and tag into props\n  loadGroupDays,\n  loadWeight,\n  computeRoG,\n  saveRecord,\n  weights.saveRecordRow, // props: row, will pull record from state\n  () => ({whichInput: 'tagInput'}),\n  moveInputDown,\n  set(state`msg`, { type: 'good', text: 'Tag Saved' }),\n]);\n\n\nexport const saveWeight = sequence('saveWeight', [\n  set(state`msg`, { type: 'bad', text: 'Saving weight...' }),\n  ({get}) => get(state`weightInput`), // put row and weight into props\n  ({props}) => ({ weight: props.weight * 10 }),\n  loadTag, // pull tag into props if it exists\n  loadGroupDays,\n  computeRoG,\n  saveRecord,\n  weights.saveRecordRow, // props: row, will pull record from state\n  () => ({whichInput: 'weightInput'}),\n  moveInputDown,\n  set(state`msg`, { type: 'good', text: 'Weight Saved' }),\n]);\n\n\n//-------------------------------------------------------\n// Initialization\nexport const init = sequence('init', [\n  windowSize.init,\n  set(state`msg`, { type: 'good', text: 'Checking trello authorization...' }),\n  trello.authorize,\n  set(state`msg`, { type: 'good', text: 'Checking google authorization...' }),\n  google.authorize,\n  set(state`msg`, { type: 'good', text: 'Fetching records...' }),\n  parallel('parallel fetch', [\n    treatments.fetch,\n    treatments.fetchConfig,\n    incoming.fetch,\n    dead.fetch,\n    loadWeightsForDate,\n  ]),\n  set(state`msg`, { type: 'good', text: 'Computing stats...' }),\n  incoming.computeStats,\n  // Move inputs to bottom row\n  ({store,get}) => {\n    const lastrow = get(state`weights.records`).length;\n    store.set(state`tagInput.row`, lastrow);\n    store.set(state`weightInput.row`, lastrow);\n  },\n  set(state`recordsValid`, true),\n  set(state`msg`, { type: 'good', text: 'Loaded successfully.'}),\n  scrollToTag,\n]);\n","import moment from 'moment';\nimport { set } from 'cerebral/factories';\nimport { state } from 'cerebral/tags';\n\nimport treatmentsModule from 'aultfarms-lib/treatments/module';\nimport   incomingModule from 'aultfarms-lib/incoming/module';\nimport       deadModule from 'aultfarms-lib/dead/module';\nimport    weightsModule from 'aultfarms-lib/weights/module';\nimport     trelloModule from 'aultfarms-lib/trello/module';\nimport     googleModule from 'aultfarms-lib/google/module';\nimport windowSizeModule from 'aultfarms-lib/windowSize/module';\n\nimport     trelloProvider from 'aultfarms-lib/trello/provider';\nimport     googleProvider from 'aultfarms-lib/google/provider';\nimport windowSizeProvider from 'aultfarms-lib/windowSize/provider';\n\nimport * as trelloErrors from 'aultfarms-lib/trello/module/errors';\n\nimport * as sequences from './sequences';\n\nexport default {\n  sequences,\n  state: { \n    recordsValid: false,\n    date: moment().format('YYYY-MM-DD'),\n    tabSelector: {\n      active: 'weights', // weights/tag/group/dead\n    },\n    tagInput: {\n      row: 0,\n      tag: {\n        number: '',\n        color: '',\n      },\n    },\n    weightInput: {\n      row: 0,\n      weight: '',\n    },\n    limits: {\n      light: 1200,\n      heavy: 1530,\n    },\n    msg: {\n      type: 'bad',\n      text: 'Initializing...',\n    },\n  },\n  modules: {\n    treatments: treatmentsModule,\n      incoming: incomingModule,\n          dead: deadModule,\n       weights: weightsModule,\n        trello: trelloModule,\n        google: googleModule,\n    windowSize: windowSizeModule,\n  },\n  providers: {\n        trello: trelloProvider,\n        google: googleProvider,\n    windowSize: windowSizeProvider,\n  },\n  catch: [\n    [ trelloErrors.TrelloSaveError,      [ set(state`msg`, 'ERROR: failed to save in Trello')      ] ],\n    [ trelloErrors.TrelloGetError,       [ set(state`msg`, 'ERROR: failed to get in Trello')       ] ],\n    [ trelloErrors.TrelloAuthorizeError, [ set(state`msg`, 'ERROR: failed to authorize in Trello') ] ],\n  ],\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import registerServiceWorker from './registerServiceWorker';\nimport CerebralApp from 'cerebral';\nimport { Container } from '@cerebral/react';\nimport devtools from 'cerebral/devtools';\n\nimport App from './App';\nimport AppModule from './module';\n\nimport 'pure-css';\nimport './index.css';\n\nconst controller = CerebralApp(AppModule, {\n  devtools: process.env.NODE_ENV === 'production' ? null : devtools({host: 'localhost:8000', reconnect: true }),\n});\n\n\n// Render the root node:\nReactDOM.render(\n  <Container app={controller}>\n    <App />\n  </Container>, document.getElementById('root')\n);\n\n//registerServiceWorker();\n\n"],"sourceRoot":""}